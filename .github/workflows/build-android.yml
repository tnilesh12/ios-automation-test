name: Build and Sign APK/AAB

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    name: Build APK and AAB
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Java (JDK 11 in this case)
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'

      # Setup Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        # with:
        #   flutter-version: 'stable'

      # Install dependencies
      - name: Install dependencies
        run: flutter pub get

      # Decode and setup keystore (from GitHub Secrets)
      - name: Decode and setup keystore
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          echo $ANDROID_KEYSTORE_BASE64 | base64 --decode > android/app/key.jks

      # Build APK
      - name: Build APK
        run: flutter build apk --release --no-tree-shake-icons

      # Build AAB (Android App Bundle)
      - name: Build AAB
        run: flutter build appbundle --release --no-tree-shake-icons

      # Sign the APK
      - name: Sign APK
        env:
          KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: |
          jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 \
            -keystore android/app/key.jks \
            -storepass $KEYSTORE_PASSWORD \
            -keypass $KEY_PASSWORD \
            android/app/build/outputs/apk/release/app-release-unsigned.apk $KEY_ALIAS

      # Zip align APK
      - name: Zip align APK
        run: |
          ${ANDROID_HOME}/build-tools/30.0.3/zipalign -v 4 \
            android/app/build/outputs/apk/release/app-release-unsigned.apk \
            android/app/build/outputs/apk/release/app-release.apk

      # Upload APK and AAB as artifacts
      - name: Upload APK and AAB
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: |
            android/app/build/outputs/apk/release/app-release.apk
            android/app/build/outputs/bundle/release/app-release.aab
